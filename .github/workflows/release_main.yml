# https://github.com/abarichello/godot-ci/blob/master/.github/workflows/godot-ci.yml
name: release-main

on:
  push:
    branches:
      - main

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: neb-score-calculator
  PROJECT_PATH: godot

jobs:
  export-web:
    name: export (web)
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
    #   # Installing rsync is needed in order to deploy to GitHub Pages. Without it, the build will fail.
    #   - name: Install rsync ðŸ“š
    #     run: |
    #       apt-get update && apt-get install -y rsync
    #   - name: Deploy to GitHub Pages ðŸš€
    #     uses: JamesIves/github-pages-deploy-action@releases/v3
    #     with:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #       BRANCH: main # The branch the action should deploy to.
    #       FOLDER: build/web # The folder the action should deploy.

  # export-linux:
  #  name: export (linux)
  #  runs-on: ubuntu-20.04
  #  container:
  #    image: barichello/godot-ci:4.3
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v4
  #      with:
  #        lfs: true
  #    - name: Setup
  #      run: |
  #        mkdir -v -p ~/.local/share/godot/export_templates/
  #        mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #    - name: Linux Build
  #      run: |
  #        mkdir -v -p build/linux
  #        EXPORT_DIR="$(readlink -f build)"
  #        cd $PROJECT_PATH
  #        godot --headless --verbose --export-release "Linux/X11" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
  #    - name: Upload Artifact
  #      uses: actions/upload-artifact@v4
  #      with:
  #        name: linux
  #        path: build/linux

  export-windows:
    name: export (windows)
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  deploy-itch:
    name: deploy to itch.io
    needs: [export-web, export-windows]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel: ["web", "windows", "linux"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.channel }}
          path: archives/${{ matrix.channel }}

      - name: Deploy to Itch.io [${{ matrix.channel }}]
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: ${{ matrix.channel }}
          ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
          ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
          PACKAGE: ${{ github.workspace }}/archives/${{ matrix.channel }}
